# <Type>: <Title> (#Issue Number) - Format title as "<Type>: <Title> (#Issue Number)"
# <Type> and (#Issue Number) are automatically generated by byulFormat

# Clearly describe "what" has been changed / Do not end with a period
# Example: feat: add login feature (#1)

# Write the body below

# Use "-" to separate multiple lines
# - login.tsx file has been modified.

# --- COMMIT END ---
#   <Type> List
#   feat        : Feature (new feature)
#   fix         : Bug fix (bug fix)
#   refactor    : Refactoring
#   style       : Code style (code formatting, whitespace, comments, semicolons: no changes to business logic)
#   docs        : Documentation (add, modify, delete docs, README)
#   test        : Tests (add, modify, delete test code: no changes to business logic)
#   settings    : Project settings
#   chore       : Miscellaneous changes like package manager mods, e.g., .gitignore
#   init        : Initial creation
#   rename      : Rename or move files/folders only
#   remove      : Delete files only
#   design      : UI/UX design changes like CSS
#   release     : Deployment or release, e.g., release/login-123
# ------------------
#   Start title with a lowercase letter
#   Title should be imperative
#   Do not end title with a period
#   Leave a blank line between title and body
#   The body should explain "what" and "why" rather than "how"
#   Use "-" to separate multiple lines in the body
#   Setup command:
#   git config --local commit.template ./.github/.gitmessage.txt
# ------------------